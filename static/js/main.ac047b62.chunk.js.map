{"version":3,"sources":["components/Intro/Intro.jsx","components/Hello/Hello.jsx","components/About/About.jsx","components/Content/Content.jsx","App.js","serviceWorker.js","index.js"],"names":["Intro","Fragment","className","ButtonGroup","Button","target","href","Hello","Row","style","width","Col","md","overflowX","x","About","size","Content","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6WAgBeA,EAZD,kBACV,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,SAASC,KAAK,gEAA7B,OACA,kBAACF,EAAA,EAAD,CAAQC,OAAO,SAASC,KAAK,0DAA7B,iBAGR,yBAAKJ,UAAU,W,wCC0BRK,EA/BD,kBAEV,kBAAC,IAAMN,SAAP,KACI,kBAACO,EAAA,EAAD,CAAKC,MAAS,CAACC,MAAO,SAClB,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKH,MAAO,CAAEC,MAAO,OAAQG,UAAW,WACpC,kBAAC,IAAD,KACI,kBAAC,WAAD,CAAUC,EAAG,EAAE,GAAI,MACf,yBAAKZ,UAAU,cAK/B,kBAACS,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKH,MAAO,CAAEC,MAAO,OAAQG,UAAW,WACpC,kBAAC,IAAD,KACI,0BAAMX,UAAU,QACZ,kBAAC,WAAD,CAAUY,EAAG,CAAC,IAAK,MACf,wBAAIZ,UAAU,YAAd,qC,QC6CjBa,G,MA5DD,kBAEV,kBAAC,IAAMd,SAAP,KACI,kBAACO,EAAA,EAAD,CAAKC,MAAS,CAACC,MAAO,SAClB,yBAAKR,UAAU,WAEnB,kBAACM,EAAA,EAAD,CAAKC,MAAS,CAACC,MAAO,SAClB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKH,MAAO,CAAEC,MAAO,OAAQG,UAAW,WACpC,kBAAC,IAAD,KACI,kBAAC,WAAD,CAAUC,EAAG,EAAE,GAAI,KACf,wBAAIZ,UAAU,eAAd,4BAKhB,kBAACS,EAAA,EAAD,CAAKC,GAAG,OAEZ,kBAACJ,EAAA,EAAD,CAAKC,MAAS,CAACC,MAAO,SAClB,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKH,MAAO,CAAEC,MAAO,OAAQG,UAAW,WACpC,kBAAC,IAAD,KACI,0BAAMX,UAAU,QAEZ,kBAAC,WAAD,CAAUY,EAAG,CAAC,IAAK,IACf,uBAAGZ,UAAU,QAAb,wBACqB,6BACjB,mCAOxB,kBAACS,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKH,MAAO,CAAEC,MAAO,OAAQG,UAAW,WACpC,kBAAC,IAAD,KACI,0BAAMX,UAAU,QACZ,kBAAC,WAAD,CAAUY,EAAG,EAAE,GAAI,IACf,wBAAIZ,UAAU,QAAd,2BAGA,6BACA,uBAAGG,OAAO,SAASC,KAAK,gEACpB,kBAAC,IAAD,CAAkBJ,UAAW,OAAOc,KAAM,YAQtE,kBAACR,EAAA,EAAD,KACI,yBAAKN,UAAU,cCxDNe,G,kKAEjB,WACI,OACI,yBAAKf,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPqBgB,cCJhBC,E,4JACnB,WACE,OACE,kBAAC,mBAAD,KACE,kBAAC,EAAD,W,GAJyBD,aCQbE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ac047b62.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Intro.scss';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\n\r\nconst Intro = () => (\r\n    <React.Fragment>\r\n        <div className=\"buttons\">\r\n            <ButtonGroup>\r\n                <Button target=\"_blank\" href=\"https://www.facebook.com/events/197719935560769?ref=newsfeed\">P2C</Button>\r\n                <Button target=\"_blank\" href=\"https://github.com/ethanwarnar/code-with-p2c/tree/code\">Source Code</Button>\r\n            </ButtonGroup>\r\n        </div>\r\n        <div className=\"main\"/>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Intro;","import React from 'react';\r\nimport './Hello.scss';\r\nimport { Parallax } from 'react-scroll-parallax';\r\nimport { Col, Row } from 'reactstrap'\r\n// @ts-ignore\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst Hello = () => (\r\n\r\n    <React.Fragment>\r\n        <Row style = {{width: '100%'}}>\r\n            <Col md=\"6\">\r\n                <div style={{ width: '100%', overflowX: 'hidden' }}>\r\n                    <Fade >\r\n                        <Parallax x={[-80, 100]}>\r\n                            <div className=\"image\" />\r\n                        </Parallax>\r\n                    </Fade>\r\n                </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <div style={{ width: '100%', overflowX: 'hidden' }}>\r\n                    <Fade >\r\n                        <main className=\"root\">\r\n                            <Parallax x={[80, -100]}>\r\n                                <h1 className=\"headline\">Build a personal website.</h1>\r\n                            </Parallax>\r\n                        </main>\r\n                    </Fade>\r\n                </div>\r\n\r\n            </Col>\r\n        </Row>\r\n\r\n    </React.Fragment>\r\n\r\n);\r\n\r\nexport default Hello;\r\n","\r\nimport React, { Component } from 'react';\r\nimport Intro from '../Intro/Intro';\r\nimport { Col, Row } from 'reactstrap'\r\nimport Fade from 'react-reveal/Fade';\r\nimport { Parallax } from 'react-scroll-parallax';\r\nimport { FaFacebookSquare } from \"react-icons/fa\";\r\n\r\nimport './About.scss';\r\n\r\nconst About = () => (\r\n\r\n    <React.Fragment>\r\n        <Row style = {{width: '100%'}}>\r\n            <div className=\"space\"/>\r\n        </Row>\r\n        <Row style = {{width: '100%'}}>\r\n            <Col md=\"2\" />\r\n            <Col md=\"8\" >\r\n                <div style={{ width: '100%', overflowX: 'hidden' }}>\r\n                    <Fade >\r\n                        <Parallax x={[-50, 50]}>\r\n                            <h1 className=\"banner_text\">React + GitHub Pages</h1>\r\n                        </Parallax>\r\n                    </Fade>\r\n                </div>\r\n            </Col >\r\n            <Col md=\"4\" />\r\n        </Row>\r\n        <Row style = {{width: '100%'}}>\r\n            <Col md=\"6\">\r\n                <div style={{ width: '100%', overflowX: 'hidden' }}>\r\n                    <Fade >\r\n                        <main className=\"root\">\r\n\r\n                            <Parallax x={[80, -0]}>\r\n                                <p className=\"text\">\r\n                                26-June-2021 | 2-4pm <br />\r\n                                    <br />\r\n                                    </p>\r\n                            </Parallax>\r\n                        </main>\r\n                    </Fade>\r\n                </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <div style={{ width: '100%', overflowX: 'hidden' }}>\r\n                    <Fade >\r\n                        <main className=\"root\">\r\n                            <Parallax x={[-80, 0]}>\r\n                                <h1 className=\"text\" >\r\n                                    RSVP to the event here. \r\n                                </h1>                                   \r\n                                <br/>\r\n                                <a target=\"_blank\" href=\"https://www.facebook.com/events/197719935560769?ref=newsfeed\" >\r\n                                    <FaFacebookSquare className= \"icon\" size={70} /> \r\n                                </a>\r\n                            </Parallax>\r\n                        </main>\r\n                    </Fade>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <div className=\"space\"/>\r\n        </Row>\r\n    </React.Fragment >\r\n\r\n);\r\n\r\nexport default About;\r\n","\r\nimport React, { Component } from 'react';\r\nimport Intro from '../Intro/Intro';\r\nimport Hello from '../Hello/Hello';\r\nimport About from '../About/About';\r\n\r\nimport './Content.scss';\r\n\r\nexport default class Content extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"blah\">\r\n                <Intro />\r\n                <Hello />\r\n                <About />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport Content from './components/Content/Content.jsx';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ParallaxProvider>\r\n        <Content />\r\n      </ParallaxProvider>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}